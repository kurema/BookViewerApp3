// <auto-generated />
//
// To parse this JSON data, add NuGet 'System.Text.Json' then do:
//
//    using BookViewerApp.Views.BrowserTools;
//
//    var snippets = Snippets.FromJson(jsonString);

// Removed some codes related to DateTime.
#nullable enable
#pragma warning disable CS8618
#pragma warning disable CS8601
#pragma warning disable CS8603

namespace BookViewerApp.Views.BrowserTools.CushionInfos
{
	using System;
	using System.Collections.Generic;

	using System.Text.Json;
	using System.Text.Json.Serialization;
	using System.Globalization;

	public partial class CushionInfo
	{
		[JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
		[JsonPropertyName("content")]
		public string Content { get; set; }

		[JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
		[JsonPropertyName("filename")]
		public string Filename { get; set; }

		[JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
		[JsonPropertyName("url")]
		public string Url { get; set; }
	}

	public partial class CushionInfo
	{
		public static CushionInfo FromJson(string json) => JsonSerializer.Deserialize<CushionInfo>(json, BookViewerApp.Views.BrowserTools.CushionInfos.Converter.Settings);
	}

	public static partial class Serialize
	{
		public static string ToJson(this CushionInfo self) => JsonSerializer.Serialize(self, BookViewerApp.Views.BrowserTools.CushionInfos.Converter.Settings);
	}

	internal static class Converter
	{
		public static readonly JsonSerializerOptions Settings = new(JsonSerializerDefaults.General)
		{
			Converters =
			{
			},
		};
	}
}
#pragma warning restore CS8618
#pragma warning restore CS8601
#pragma warning restore CS8603
